on:
  push:
    branches:
      - master
      - main
      
  workflow_dispatch:
    inputs:
      bump:
        description: bump rule (major|minor|patch|tag|addon)
        default: tag
        required: false
        
      version:
        description: manual version
        default: ''
        required: false
        
      release:
        description: release type (local|global)
        default: local
        required: false
        
# Secrets:
#   PYPIRC - pypi configuration file
      
jobs:
  Release:
    runs-on: ubuntu-latest
    steps:
      - name: Validate inputs  #TODO create an action for this
        if: github.event_name == workflow_dispatch
        env:
          BUMP: ${{ github.event.inputs.bump }}
          RELEASE: ${{ github.event.inputs.release }}
        run: |
          case $BUMP in
            major)
              ;;
            minor)
              ;;
            patch)
              ;;
            tag)
              ;;
            addon)
              ;;
            *)
              echo "invalid bump rule: $BUMP"
              exit 1
              ;;
          esac
          
          case $RELEASE in 
            local)
              ;;
            global)
              ;;
            *)
              echo invalid release type: $RELEASE
              exit 1
              ;;
              
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.7
          
      - name: Setup poetry
        uses: abatilo/actions-poetry@v2.1.0
        
      - name: Bump grpc
        if: github.event_name == 'workflow_dispatch'
        run: |
          GRPC_VERSION=$(curl -Ls https://pypi.org/pypi/hydrosdk/json | jq -r .info.version)
          poetry add hydro-serving-grpc=$GRPC_VERSION
          
      - name: Install dependecies
        run: poetry install
        
      - name: bump version
        if: github.events.inputs.version == ''
        run: poetry version ${{ github.events.inputs.bump }}
        
      - name: force bump version
        if: github.events.inputs.version != ''
        run: poetry version 
        
      - name: Build
        run: poetry build
          
      - name: Publish
        run: |
          poetry config repositories.testpypi https://test.pypi.org/legacy/
          poetry pulish -u __token__ -p ${{ secrets.pypi_token }} -r testpypi
          
